{"filter":false,"title":"index.js","tooltip":"/mult/index.js","undoManager":{"mark":9,"position":9,"stack":[[{"start":{"row":0,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["const express = require('express');","const app = express();","const port = 8000;","","// Middleware para interpretar JSON","app.use(express.json());","","// Endpoint POST /mult","app.post('/mult', (req, res) => {","    const { op1, op2 } = req.body;","","    // Verificações básicas","    if (typeof op1 !== 'number' || typeof op2 !== 'number') {","        return res.status(400).json({ error: 'op1 e op2 devem ser números' });","    }","","    const resultado = op1 * op2;","    res.json({ resultado });","});","","// Inicializa o servidor","app.listen(port, () => {","    console.log(`Servidor rodando em http://localhost:${port}`);","});",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":24,"column":0},"action":"remove","lines":["const express = require('express');","const app = express();","const port = 8000;","","// Middleware para interpretar JSON","app.use(express.json());","","// Endpoint POST /mult","app.post('/mult', (req, res) => {","    const { op1, op2 } = req.body;","","    // Verificações básicas","    if (typeof op1 !== 'number' || typeof op2 !== 'number') {","        return res.status(400).json({ error: 'op1 e op2 devem ser números' });","    }","","    const resultado = op1 * op2;","    res.json({ resultado });","});","","// Inicializa o servidor","app.listen(port, () => {","    console.log(`Servidor rodando em http://localhost:${port}`);","});",""],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["const express = require('express');","const app = express();","const port = 8000;","","// Middleware para ler o corpo das requisições em JSON","app.use(express.json());","","// Endpoint para multiplicação","app.post('/mult', (req, res) => {","    const { op1, op2 } = req.body;","","    // Verifica se ambos os parâmetros são números","    if (typeof op1 !== 'number' || typeof op2 !== 'number') {","        return res.status(400).json({ error: 'op1 e op2 devem ser números' });","    }","","    const resultado = op1 * op2;","    return res.json({ resultado });","});","","app.listen(port, () => {","    console.log(`Microsserviço de multiplicação rodando em http://localhost:${port}`);","});",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["const express = require('express');","const app = express();","const port = 8000;","","// Middleware para ler o corpo das requisições em JSON","app.use(express.json());","","// Endpoint para multiplicação","app.post('/mult', (req, res) => {","    const { op1, op2 } = req.body;","","    // Verifica se ambos os parâmetros são números","    if (typeof op1 !== 'number' || typeof op2 !== 'number') {","        return res.status(400).json({ error: 'op1 e op2 devem ser números' });","    }","","    const resultado = op1 * op2;","    return res.json({ resultado });","});","","app.listen(port, () => {","    console.log(`Microsserviço de multiplicação rodando em http://localhost:${port}`);","});",""],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["const express = require(\"express\");","const app = express();","","app.get(\"/mult\", (req, res) => {","    const { op1, op2 } = req.query;","","    if (!op1 || !op2) {","        return res.status(400).json({ error: \"Parâmetros op1 e op2 são obrigatórios\" });","    }","","    const result = Number(op1) * Number(op2);","    res.json({ op1, op2, result });","});","","const PORT = process.env.PORT || 3000;","app.listen(PORT, () => {","    console.log(`Mult service rodando na porta ${PORT}`);","});",""],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":18,"column":0},"action":"remove","lines":["const express = require(\"express\");","const app = express();","","app.get(\"/mult\", (req, res) => {","    const { op1, op2 } = req.query;","","    if (!op1 || !op2) {","        return res.status(400).json({ error: \"Parâmetros op1 e op2 são obrigatórios\" });","    }","","    const result = Number(op1) * Number(op2);","    res.json({ op1, op2, result });","});","","const PORT = process.env.PORT || 3000;","app.listen(PORT, () => {","    console.log(`Mult service rodando na porta ${PORT}`);","});",""],"id":6}],[{"start":{"row":0,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["// index.js","const express = require('express');","const app = express();","const PORT = 3000;","","// Endpoint /mult","app.get('/mult', (req, res) => {","  const op1 = Number(req.query.op1);","  const op2 = Number(req.query.op2);","","  if (isNaN(op1) || isNaN(op2)) {","    console.log(`Requisição inválida recebida: op1=${req.query.op1}, op2=${req.query.op2}`);","    return res.status(400).json({ error: \"Parâmetros op1 e op2 devem ser números\" });","  }","","  const result = op1 * op2;","","  // Log detalhado da requisição","  console.log(`[${new Date().toISOString()}] Requisição recebida: op1=${op1}, op2=${op2}, result=${result}`);","","  res.json({ op1, op2, result });","});","","// Mensagem de inicialização","app.listen(PORT, () => {","  console.log(`Mult service rodando na porta ${PORT}`);","});",""],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":11},"action":"remove","lines":["// index.js"],"id":8}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":17},"action":"remove","lines":["// Endpoint /mult"],"id":9}],[{"start":{"row":23,"column":0},"end":{"row":23,"column":28},"action":"remove","lines":["// Mensagem de inicialização"],"id":10}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":23,"column":0},"end":{"row":23,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1758324171550,"hash":"8f56ada2e874e0598b74a8ad7f178bb05d436704"}